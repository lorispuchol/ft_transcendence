version: "3"

networks:
  db_net:
    driver: bridge

services:

  server:
    depends_on:
      - db
    container_name: server
    init: true                    # run init scripts to kill zombie processes
    restart: unless-stopped
    env_file:
      - .env                      # pass environment variables to container
      - .env.credential
    build:
      context: ./server/.         # context for dockerfile build (building can't copy files outside of context)
      dockerfile: Dockerfile      # use custom dockerfile
      args:                       # pass arguments to dockerfile
        - name=value
    ports:                        # map port 8080 on host to port 8080 on container "host:container"
      - 8080:8080
    volumes:                      # !!!!!!!!!!!!!!!!!!!  only for dev, remove for production
      - ./server/.:/app/          # use to update containers files which have been copied from local directory ./server/
    networks:
      - db_net

  client:
    depends_on: 
      - server
    container_name: client
    init: true
    restart: unless-stopped
    build:
      context: ./client/.
      dockerfile: Dockerfile
    ports:
      - 8585:8585
    env_file:
      - .env.credential                # dev
    environment:
      PORT: ${CLIENT_PORT}                # Change default port of React (3000 by default)
      REACT_APP_SERVER_PORT: ${SERVER_PORT}
      #REACT_APP_SERVER_HOST: ${SERVER_HOST}
    volumes:
      - ./client/.:/app/


  db:
    container_name: db
    init: true
    restart: unless-stopped
    image: postgres:latest
    ports:                               # only for dev: to connect to db from outside container
      - 5432:5432
    environment:                         # pass environnement variables to container
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    networks:
      - db_net
